swagger: '2.0'
info:
  title: OANDA v20 Account Pricing API
  description: >-
    v20 Pricing-related definitions and endpoints used to obtain Prices
    for an Account.
  contact:
    name: OANDA API Support
    url: http://developer.oanda.com/rest-live-v20/introduction/
    email: api@oanda.com
  license:
    name: MIT
    url: https://github.com/oanda/v20-openapi/blob/master/LICENSE.txt
  version: 3.0.15
basePath: /v3
produces:
- application/json
consumes:
- application/json
paths:
  /accounts/{accountID}/pricing:
    get:
      summary: Current Account Prices
      description: >-
        Get pricing information for a specified list of Instruments within
        an Account.
      operationId: get
      parameters:
      - $ref: primitives.yaml#/parameters/authorizationHeaderParam
      - $ref: primitives.yaml#/parameters/acceptDatetimeFormatHeaderParam
      - $ref: account.yaml#/parameters/accountIDPathParam
      - name: instruments
        description: List of Instruments to get pricing for.
        in: query
        type: array
        items:
          type: string
          format: >-
            A string containing the base currency and quote currency delimited
            by a "_".
        collectionFormat: csv
        required: true
      - name: since
        description: >-
          Date/Time filter to apply to the returned prices. Only prices
          with a time later than this filter will be provided.
        in: query
        type: string
        format: >-
          The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt.
          The Unix representation is a string representing the number of
          seconds since the Unix Epoch (January 1st, 1970 at UTC). The value
          is a fractional number, where the fractional part represents a
          fraction of a second (up to nine decimal places).
      - name: includeUnitsAvailable
        description: >-
          Flag that enables the inclusion of the unitsAvailable field in
          the returned Price objects.
        in: query
        type: boolean
      responses:
        '200':
          description: Pricing information has been successfully provided.
          headers:
            RequestID:
              description: The unique identifier generated for the request
              type: string
          schema:
            type: object
            properties:
              prices:
                type: array
                description: The list of Price objects requested
                items:
                  $ref: '#/definitions/Price'
        '400':
          $ref: primitives.yaml#/responses/400
        '401':
          $ref: primitives.yaml#/responses/401
        '404':
          $ref: primitives.yaml#/responses/404
        '405':
          $ref: primitives.yaml#/responses/405
  /accounts/{accountID}/pricing/stream:
    get:
      summary: Price Stream
      description: >-
        Get a stream of Account Prices starting from when the request is
        made.

        This pricing stream does not include every single price created
        for the Account, but instead will provide at most 4 prices per second
        (every 250 milliseconds) for each instrument being requested.

        If more than one price is created for an instrument during the 250
        millisecond window, only the price in effect at the end of the window
        is sent. This means that during periods of rapid price movement,
        subscribers to this stream will not be sent every price.

        Pricing windows for different connections to the price stream are
        not all aligned in the same way (i.e. they are not all aligned to
        the top of the second). This means that during periods of rapid
        price movement, different subscribers may observe different prices
        depending on their alignment.
      operationId: stream
      parameters:
      - $ref: primitives.yaml#/parameters/authorizationHeaderParam
      - $ref: primitives.yaml#/parameters/acceptDatetimeFormatHeaderParam
      - $ref: account.yaml#/parameters/accountIDPathParam
      - name: instruments
        description: List of Instruments to stream Prices for.
        in: query
        type: array
        items:
          type: string
          format: >-
            A string containing the base currency and quote currency delimited
            by a "_".
        collectionFormat: csv
        required: true
      - name: snapshot
        description: >-
          Flag that enables/disables the sending of a pricing snapshot when
          initially connecting to the stream.
        in: query
        type: boolean
      responses:
        '200':
          description: Connecting to the Price Stream was successful.
          headers:
            Link:
              description: A link to the next/previous order book snapshot.
              type: string
            RequestID:
              description: The unique identifier generated for the request
              type: string
          schema:
            type: object
            description: >-
              The response body for the Pricing Stream uses chunked transfer
              encoding.  Each chunk contains Price and/or PricingHeartbeat
              objects encoded as JSON.  Each JSON object is serialized into
              a single line of text, and multiple objects found in the same
              chunk are separated by newlines.

              Heartbeats are sent every 5 seconds.
            properties:
              price:
                $ref: '#/definitions/Price'
              heartbeat:
                $ref: '#/definitions/PricingHeartbeat'
        '400':
          $ref: primitives.yaml#/responses/400
        '401':
          $ref: primitives.yaml#/responses/401
        '404':
          $ref: primitives.yaml#/responses/404
        '405':
          $ref: primitives.yaml#/responses/405
definitions:
  Price:
    type: object
    description: The specification of an Account-specific Price.
    properties:
      type:
        type: string
        description: >-
          The string "PRICE". Used to identify the a Price object when found
          in a stream.
      instrument:
        type: string
        description: The Price's Instrument.
        format: >-
          A string containing the base currency and quote currency delimited
          by a "_".
      time:
        type: string
        description: The date/time when the Price was created
        format: >-
          The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt.
          The Unix representation is a string representing the number of
          seconds since the Unix Epoch (January 1st, 1970 at UTC). The value
          is a fractional number, where the fractional part represents a
          fraction of a second (up to nine decimal places).
      status:
        type: string
        description: The status of the Price.
        enum:
        - tradeable
        - non-tradeable
        - invalid
      tradeable:
        type: boolean
        description: Flag indicating if the Price is tradeable or not
      bids:
        type: array
        description: >-
          The list of prices and liquidity available on the Instrument's
          bid side. It is possible for this list to be empty if there is
          no bid liquidity currently available for the Instrument in the
          Account.
        items:
          $ref: '#/definitions/PriceBucket'
      asks:
        type: array
        description: >-
          The list of prices and liquidity available on the Instrument's
          ask side. It is possible for this list to be empty if there is
          no ask liquidity currently available for the Instrument in the
          Account.
        items:
          $ref: '#/definitions/PriceBucket'
      closeoutBid:
        type: string
        description: >-
          The closeout bid Price. This Price is used when a bid is required
          to closeout a Position (margin closeout or manual) yet there is
          no bid liquidity. The closeout bid is never used to open a new
          position.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      closeoutAsk:
        type: string
        description: >-
          The closeout ask Price. This Price is used when a ask is required
          to closeout a Position (margin closeout or manual) yet there is
          no ask liquidity. The closeout ask is never used to open a new
          position.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      quoteHomeConversionFactors:
        $ref: '#/definitions/QuoteHomeConversionFactors'
      unitsAvailable:
        $ref: '#/definitions/UnitsAvailable'
  PriceValue:
    type: string
    description: The string representation of a Price for an Instrument.
    format: >-
      A decimal number encodes as a string. The amount of precision provided
      depends on the Price's Instrument.
  PriceBucket:
    type: object
    description: >-
      A Price Bucket represents a price available for an amount of liquidity
    properties:
      price:
        type: string
        description: The Price offered by the PriceBucket
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      liquidity:
        type: integer
        description: The amount of liquidity offered by the PriceBucket
  PriceStatus:
    type: string
    description: The status of the Price.
    enum:
    - tradeable
    - non-tradeable
    - invalid
  UnitsAvailableDetails:
    type: object
    description: >-
      Representation of many units of an Instrument are available to be
      traded for both long and short Orders.
    properties:
      long:
        type: string
        description: The units available for long Orders.
        format: >-
          A decimal number encoded as a string. The amount of precision
          provided depends on what the number represents.
      short:
        type: string
        description: The units available for short Orders.
        format: >-
          A decimal number encoded as a string. The amount of precision
          provided depends on what the number represents.
  UnitsAvailable:
    type: object
    description: >-
      Representation of how many units of an Instrument are available to
      be traded by an Order depending on its postionFill option.
    properties:
      default:
        $ref: '#/definitions/UnitsAvailableDetails'
      reduceFirst:
        $ref: '#/definitions/UnitsAvailableDetails'
      reduceOnly:
        $ref: '#/definitions/UnitsAvailableDetails'
      openOnly:
        $ref: '#/definitions/UnitsAvailableDetails'
  QuoteHomeConversionFactors:
    type: object
    description: >-
      QuoteHomeConversionFactors represents the factors that can be used
      used to convert quantities of a Price's Instrument's quote currency
      into the Account's home currency.
    properties:
      positiveUnits:
        type: string
        description: >-
          The factor used to convert a positive amount of the Price's Instrument's
          quote currency into a positive amount of the Account's home currency.  Conversion
          is performed by multiplying the quote units by the conversion
          factor.
        format: >-
          A decimal number encoded as a string. The amount of precision
          provided depends on what the number represents.
      negativeUnits:
        type: string
        description: >-
          The factor used to convert a negative amount of the Price's Instrument's
          quote currency into a negative amount of the Account's home currency.  Conversion
          is performed by multiplying the quote units by the conversion
          factor.
        format: >-
          A decimal number encoded as a string. The amount of precision
          provided depends on what the number represents.
  PricingHeartbeat:
    type: object
    description: >-
      A PricingHeartbeat object is injected into the Pricing stream to ensure
      that the HTTP connection remains active.
    properties:
      type:
        type: string
        description: The string "HEARTBEAT"
      time:
        type: string
        description: The date/time when the Heartbeat was created.
        format: >-
          The RFC 3339 representation is a string conforming to https://tools.ietf.org/rfc/rfc3339.txt.
          The Unix representation is a string representing the number of
          seconds since the Unix Epoch (January 1st, 1970 at UTC). The value
          is a fractional number, where the fractional part represents a
          fraction of a second (up to nine decimal places).
parameters:
  transactionIDPathParam:
    name: transactionID
    description: A Transaction ID
    in: path
    type: string
    format: >-
      String representation of the numerical OANDA-assigned TransactionID
    required: true

