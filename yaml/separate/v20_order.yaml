swagger: '2.0'
info:
  title: OANDA v20 Order API
  description: >-
    v20 Order-related definitions and endpoints used to create, view and
    cancel Orders within an Account.
  contact:
    name: OANDA API Support
    url: http://developer.oanda.com/rest-live-v20/introduction/
    email: api@oanda.com
  license:
    name: MIT
    url: https://github.com/oanda/v20-openapi/blob/master/LICENSE.txt
  version: 3.0.14
basePath: /v3
produces:
- application/json
consumes:
- application/json
paths:
  /accounts/{accountID}/orders:
    post:
      summary: Create Order
      description: Create an Order for an Account
      operationId: create
      parameters:
      - $ref: primitives.yaml#/parameters/authorizationHeaderParam
      - $ref: account.yaml#/parameters/accountIDPathParam
      - name: createOrderBody
        in: body
        schema:
          type: object
          properties:
            order:
              $ref: '#/definitions/OrderRequest'
              description: Specification of the Order to create
        required: true
      responses:
        '201':
          description: The Order was created as specified
          headers:
            Location:
              description: A link to the Order that was just created
              type: string
          schema:
            type: object
            properties:
              orderCreateTransaction:
                $ref: transaction.yaml#/definitions/Transaction
                description: >-
                  The Transaction that created the Order specified by the
                  request.
              orderFillTransaction:
                $ref: transaction.yaml#/definitions/OrderFillTransaction
                description: >-
                  The Transaction that filled the newly created Order. Only
                  provided when the Order was immediately filled.
              orderCancelTransaction:
                $ref: transaction.yaml#/definitions/OrderCancelTransaction
                description: >-
                  The Transaction that cancelled the newly created Order.
                  Only provided when the Order was immediately cancelled.
              orderReissueTransaction:
                $ref: transaction.yaml#/definitions/Transaction
                description: >-
                  The Transaction that reissues the Order. Only provided
                  when the Order is configured to be reissued for its remaining
                  units after a partial fill and the reissue was successful.
              orderReissueRejectTransaction:
                $ref: transaction.yaml#/definitions/Transaction
                description: >-
                  The Transaction that rejects the reissue of the Order.
                  Only provided when the Order is configured to be reissued
                  for its remaining units after a partial fill and the reissue
                  was rejected.
              relatedTransactionIDs:
                type: array
                description: >-
                  The IDs of all Transactions that were created while satisfying
                  the request.
                items:
                  $ref: transaction.yaml#/definitions/TransactionID
              lastTransactionID:
                type: string
                description: >-
                  The ID of the most recent Transaction created for the
                  Account
                example: '1523'
                format: >-
                  String representation of the numerical OANDA-assigned
                  TransactionID
        '400':
          description: The Order specification was invalid
          schema:
            type: object
            properties:
              orderRejectTransaction:
                $ref: transaction.yaml#/definitions/Transaction
                description: >-
                  The Transaction that rejected the creation of the Order
                  as requested
              relatedTransactionIDs:
                type: array
                description: >-
                  The IDs of all Transactions that were created while satisfying
                  the request.
                items:
                  $ref: transaction.yaml#/definitions/TransactionID
              lastTransactionID:
                type: string
                description: >-
                  The ID of the most recent Transaction created for the
                  Account
                example: '1523'
                format: >-
                  String representation of the numerical OANDA-assigned
                  TransactionID
              errorCode:
                type: string
                description: >-
                  The code of the error that has occurred. This field may
                  not be returned for some errors.
                required: false
              errorMessage:
                type: string
                description: >-
                  The human-readable description of the error that has occurred.
                required: true
        '401':
          $ref: primitives.yaml#/responses/401
        '404':
          $ref: primitives.yaml#/responses/404
        '405':
          $ref: primitives.yaml#/responses/405
    get:
      summary: List Orders
      description: Get a list of Orders for an Account
      operationId: list
      parameters:
      - $ref: primitives.yaml#/parameters/authorizationHeaderParam
      - $ref: account.yaml#/parameters/accountIDPathParam
      - name: ids
        despcription: List of Order IDs to retrieve
        in: query
        type: array
        items:
          type: string
          format: >-
            The string representation of the OANDA-assigned OrderID. OANDA-assigned
            OrderIDs are positive integers, and are derived from the TransactionID
            of the Transaction that created the Order.
        collectionFormat: csv
      - name: state
        despcription: The state to filter the requested Orders by
        in: query
        type: string
      - name: instrument
        despcription: The instrument to filter the requested orders by
        in: query
        type: string
        format: >-
          A string containing the base currency and quote currency delimited
          by a "_".
      - name: count
        despcription: The maximum number of Orders to return
        in: query
        type: integer
      - name: beforeID
        despcription: >-
          The maximum Order ID to return. If not provided the most recent
          Orders in the Account are returned
        in: query
        type: string
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      responses:
        '200':
          description: The list of Orders requested
          headers:
            Link:
              description: >-
                A link to the next page of results if the results were paginated
              type: string
          schema:
            type: object
            properties:
              orders:
                type: array
                description: The list of Order detail objects
                items:
                  $ref: '#/definitions/Order'
              lastTransactionID:
                type: string
                description: >-
                  The ID of the most recent Transaction created for the
                  Account
                example: '1523'
                format: >-
                  String representation of the numerical OANDA-assigned
                  TransactionID
        '400':
          $ref: primitives.yaml#/responses/400
        '404':
          $ref: primitives.yaml#/responses/404
        '405':
          $ref: primitives.yaml#/responses/405
  /accounts/{accountID}/pendingOrders:
    get:
      summary: Pending Orders
      description: List all pending Orders in an Account
      operationId: listPending
      parameters:
      - $ref: primitives.yaml#/parameters/authorizationHeaderParam
      - $ref: account.yaml#/parameters/accountIDPathParam
      responses:
        '200':
          description: List of pending Orders for the Account
          schema:
            type: object
            properties:
              orders:
                type: array
                description: The list of pending Order details
                items:
                  $ref: '#/definitions/Order'
              lastTransactionID:
                type: string
                description: >-
                  The ID of the most recent Transaction created for the
                  Account
                example: '1523'
                format: >-
                  String representation of the numerical OANDA-assigned
                  TransactionID
        '401':
          $ref: primitives.yaml#/responses/401
        '404':
          $ref: primitives.yaml#/responses/404
        '405':
          $ref: primitives.yaml#/responses/405
  /accounts/{accountID}/orders/{orderSpecifier}:
    get:
      summary: Get Order
      description: Get details for a single Order in an Account
      operationId: get
      parameters:
      - $ref: primitives.yaml#/parameters/authorizationHeaderParam
      - $ref: account.yaml#/parameters/accountIDPathParam
      - $ref: '#/parameters/orderSpecifierPathParam'
      responses:
        '200':
          description: The details of the Order requested
          headers:
            Link:
              description: >-
                A link to the next page of results if the results were paginated
              type: string
          schema:
            type: object
            properties:
              order:
                $ref: '#/definitions/Order'
                description: The details of the Order requested
              lastTransactionID:
                type: string
                description: >-
                  The ID of the most recent Transaction created for the
                  Account
                example: '1523'
                format: >-
                  String representation of the numerical OANDA-assigned
                  TransactionID
        '401':
          $ref: primitives.yaml#/responses/401
        '404':
          $ref: primitives.yaml#/responses/404
        '405':
          $ref: primitives.yaml#/responses/405
    put:
      summary: Replace Order
      description: >-
        Replace an Order in an Account by simultaneously cancelling it and
        creating a replacement Order
      operationId: replace
      parameters:
      - $ref: primitives.yaml#/parameters/authorizationHeaderParam
      - $ref: account.yaml#/parameters/accountIDPathParam
      - name: orderID
        despcription: ID of the Order to cancel.
        in: path
        type: string
        format: >-
          Either the Order's OANDA-assigned OrderID or the Order's client-provided
          ClientID prefixed by the "@" symbol
        required: true
      - name: replaceOrderBody
        despcription: >-
          Specification of the replacing Order. The replacing order must
          have the same type as the replaced Order.
        in: body
        schema:
          type: object
          properties:
            order:
              $ref: '#/definitions/OrderRequest'
              description: Specification of the replacing Order
        required: true
      responses:
        '201':
          description: The Order was successfully cancelled and replaced
          headers:
            Location:
              description: A link to the replacing Order
              type: string
          schema:
            type: object
            properties:
              orderCancelTransaction:
                $ref: transaction.yaml#/definitions/OrderCancelTransaction
                description: The Transaction that cancelled the Order to
                  be replaced.
              orderCreateTransaction:
                $ref: transaction.yaml#/definitions/Transaction
                description: >-
                  The Transaction that created the replacing Order as requested.
              orderFillTransaction:
                $ref: transaction.yaml#/definitions/OrderFillTransaction
                description: >-
                  The Transaction that filled the replacing Order. This
                  is only provided when the replacing Order was immediately
                  filled.
              orderReissueTransaction:
                $ref: transaction.yaml#/definitions/Transaction
                description: >-
                  The Transaction that reissues the replacing Order. Only
                  provided when the replacing Order was partially filled
                  immediately and is configured to be reissued for its remaining
                  units.
              orderReissueRejectTransaction:
                $ref: transaction.yaml#/definitions/Transaction
                description: >-
                  The Transaction that rejects the reissue of the Order.
                  Only provided when the replacing Order was paritially
                  filled immediately and was configured to be reissued,
                  however the reissue was rejected.
              replacingOrderCancelTransaction:
                $ref: transaction.yaml#/definitions/OrderCancelTransaction
                description: >-
                  The Transaction that cancelled the replacing Order. Only
                  provided when the replacing Order was immediately cancelled.
              relatedTransactionIDs:
                type: array
                description: >-
                  The IDs of all Transactions that were created while satisfying
                  the request.
                items:
                  $ref: transaction.yaml#/definitions/TransactionID
              lastTransactionID:
                type: string
                description: >-
                  The ID of the most recent Transaction created for the
                  Account
                example: '1523'
                format: >-
                  String representation of the numerical OANDA-assigned
                  TransactionID
        '400':
          description: The Order specification was invalid
          schema:
            type: object
            properties:
              orderRejectTransaction:
                $ref: transaction.yaml#/definitions/Transaction
                description: >-
                  The Transaction that rejected the creation of the replacing
                  Order
              relatedTransactionIDs:
                type: array
                description: >-
                  The IDs of all Transactions that were created while satisfying
                  the request.
                items:
                  $ref: transaction.yaml#/definitions/TransactionID
              lastTransactionID:
                type: string
                description: >-
                  The ID of the most recent Transaction created for the
                  Account.
                example: '1523'
                format: >-
                  String representation of the numerical OANDA-assigned
                  TransactionID
              errorCode:
                type: string
                description: >-
                  The code of the error that has occurred. This field may
                  not be returned for some errors.
                required: false
              errorMessage:
                type: string
                description: >-
                  The human-readable description of the error that has occurred.
                required: true
        '401':
          $ref: primitives.yaml#/responses/401
        '404':
          $ref: primitives.yaml#/responses/404
        '405':
          $ref: primitives.yaml#/responses/405
  /accounts/{accountID}/orders/{orderSpecifier}/cancel:
    put:
      summary: Cancel Order
      description: Cancel a pending Order in an Account
      operationId: cancel
      parameters:
      - $ref: primitives.yaml#/parameters/authorizationHeaderParam
      - $ref: account.yaml#/parameters/accountIDPathParam
      - $ref: '#/parameters/orderSpecifierPathParam'
      responses:
        '200':
          description: The Order was cancelled as specified
          schema:
            type: object
            properties:
              orderCancelTransaction:
                $ref: transaction.yaml#/definitions/OrderCancelTransaction
                description: The Transaction that cancelled the Order
              relatedTransactionIDs:
                type: array
                description: >-
                  The IDs of all Transactions that were created while satisfying
                  the request.
                items:
                  $ref: transaction.yaml#/definitions/TransactionID
              lastTransactionID:
                type: string
                description: >-
                  The ID of the most recent Transaction created for the
                  Account
                example: '1523'
                format: >-
                  String representation of the numerical OANDA-assigned
                  TransactionID
        '401':
          $ref: primitives.yaml#/responses/401
        '404':
          description: The Order in the Account could not be cancelled
          schema:
            type: object
            properties:
              orderCancelRejectTransaction:
                $ref: transaction.yaml#/definitions/OrderCancelRejectTransaction
                description: The Transaction that rejected the cancellation
                  of the Order
              relatedTransactionIDs:
                type: array
                description: >-
                  The IDs of all Transactions that were created while satisfying
                  the request.
                items:
                  $ref: transaction.yaml#/definitions/TransactionID
              lastTransactionID:
                type: string
                description: >-
                  The ID of the most recent Transaction created for the
                  Account
                example: '1523'
                format: >-
                  String representation of the numerical OANDA-assigned
                  TransactionID
              errorCode:
                type: string
                description: >-
                  The code of the error that has occurred. This field may
                  not be returned for some errors.
                required: false
              errorMessage:
                type: string
                description: >-
                  The human-readable description of the error that has occurred.
                required: true
        '405':
          $ref: primitives.yaml#/responses/405
  "/accounts/{accountID}/orders/{orderSpecifier}/clientExtensions":
    put:
      summary: Set Order Extensions
      description: >-
        Update the Client Extensions for an Order in an Account. Do not
        set, modify, or delete clientExtensions if your account is associated
        with MT4.
      operationId: setClientExtensions
      parameters:
      - $ref: primitives.yaml#/parameters/authorizationHeaderParam
      - $ref: account.yaml#/parameters/accountIDPathParam
        required: true
      - $ref: '#/parameters/orderSpecifierPathParam'
      - name: setOrderClientExtensionsBody
        despcription: Representation of the replacing Order
        in: body
        schema:
          type: object
          properties:
            clientExtensions:
              $ref: transaction.yaml#/definitions/ClientExtensions
              description: >-
                The Client Extensions to update for the Order. Do not set,
                modify, or delete clientExtensions if your account is associated
                with MT4.
            tradeClientExtensions:
              $ref: transaction.yaml#/definitions/ClientExtensions
              description: >-
                The Client Extensions to update for the Trade created when
                the Order is filled. Do not set, modify, or delete clientExtensions
                if your account is associated with MT4.
        required: true
      responses:
        '200':
          description: The Order's Client Extensions were successfully modified
          schema:
            type: object
            properties:
              orderClientExtensionsModifyTransaction:
                $ref: >-
                  transaction.yaml#/definitions/OrderClientExtensionsModifyTransaction
                description: >-
                  The Transaction that modified the Client Extensions for
                  the Order
              lastTransactionID:
                type: string
                description: >-
                  The ID of the most recent Transaction created for the
                  Account
                example: '1523'
                format: >-
                  String representation of the numerical OANDA-assigned
                  TransactionID
        '400':
          description: The Order Client Extensions specification was invalid
          schema:
            type: object
            properties:
              orderClientExtensionsModifyRejectTransaction:
                $ref: >-
                  transaction.yaml#/definitions/OrderClientExtensionsModifyRejectTransaction
                description: >-
                  The Transaction that rejected the modification of the
                  Client Extensions for the Order
              lastTransactionID:
                type: string
                description: >-
                  The ID of the most recent Transaction created for the
                  Account
                example: '1523'
                format: >-
                  String representation of the numerical OANDA-assigned
                  TransactionID
              errorCode:
                type: string
                description: >-
                  The code of the error that has occurred. This field may
                  not be returned for some errors.
                required: false
              errorMessage:
                type: string
                description: >-
                  The human-readable description of the error that has occurred.
                required: true
        '401':
          $ref: primitives.yaml#/responses/401
        '404':
          $ref: primitives.yaml#/responses/404
        '405':
          $ref: primitives.yaml#/responses/405
definitions:
  OrderID:
    type: string
    description: The Order's identifier, unique within the Order's Account.
    example: '1523'
    format: >-
      The string representation of the OANDA-assigned OrderID. OANDA-assigned
      OrderIDs are positive integers, and are derived from the TransactionID
      of the Transaction that created the Order.
  OrderType:
    type: string
    description: The type of the Order.
    enum:
    - MARKET
    - LIMIT
    - STOP
    - MARKET_IF_TOUCHED
    - TAKE_PROFIT
    - STOP_LOSS
    - TRAILING_STOP_LOSS
  OrderState:
    type: string
    description: The current state of the Order.
    enum:
    - PENDING
    - FILLED
    - TRIGGERED
    - CANCELLED
  OrderIdentifier:
    type: object
    description: >-
      An OrderIdentifier is used to refer to an Order, and contains both
      the OrderID and the ClientOrderID.
    properties:
      orderID:
        type: string
        description: The OANDA-assigned Order ID
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      clientOrderID:
        type: string
        description: The client-provided client Order ID
        example: my_order_id
  OrderSpecifier:
    type: string
    description: The specification of an Order as referred to by clients
    example: '1523'
    format: >-
      Either the Order's OANDA-assigned OrderID or the Order's client-provided
      ClientID prefixed by the "@" symbol
  TimeInForce:
    type: string
    description: >-
      The time-in-force of an Order. TimeInForce describes how long an Order
      should remain pending before being automatically cancelled by the
      execution system.
    enum:
    - GTC
    - GTD
    - GFD
    - FOK
    - IOC
  OrderPositionFill:
    type: string
    description: >-
      Specification of how Positions in the Account are modified when the
      Order is filled.
    enum:
    - OPEN_ONLY
    - REDUCE_FIRST
    - REDUCE_ONLY
    - DEFAULT
  DynamicOrderState:
    type: object
    description: >-
      The dynamic state of an Order. This is only relevant to TrailingStopLoss
      Orders, as no other Order type has dynamic state.
    properties:
      id:
        type: string
        description: The Order's ID.
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      trailingStopValue:
        type: string
        description: The Order's calculated trailing stop value.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      triggerDistance:
        type: string
        description: >-
          The distance between the Trailing Stop Loss Order's trailingStopValue
          and the current Market Price. This represents the distance (in
          price units) of the Order from a triggering price. If the distance
          could not be determined, this value will not be set.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      isTriggerDistanceExact:
        type: boolean
        description: >-
          True if an exact trigger distance could be calculated. If false,
          it means the provided trigger distance is a best estimate. If
          the distance could not be determined, this value will not be set.
  Order:
    type: object
    description: >-
      The base Order definition specifies the properties that are common
      to all Orders.
    properties:
      id:
        type: string
        description: The Order's identifier, unique within the Order's Account.
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      createTime:
        type: string
        description: The time when the Order was created.
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      state:
        type: string
        description: The current state of the Order.
        enum:
        - PENDING
        - FILLED
        - TRIGGERED
        - CANCELLED
      clientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          The client extensions of the Order. Do not set, modify, or delete
          clientExtensions if your account is associated with MT4.
  MarketOrder:
    type: object
    description: >-
      A MarketOrder is an order that is filled immediately upon creation
      using the current market price.
    properties:
      id:
        type: string
        description: The Order's identifier, unique within the Order's Account.
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      createTime:
        type: string
        description: The time when the Order was created.
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      state:
        type: string
        description: The current state of the Order.
        enum:
        - PENDING
        - FILLED
        - TRIGGERED
        - CANCELLED
      clientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          The client extensions of the Order. Do not set, modify, or delete
          clientExtensions if your account is associated with MT4.
      type:
        type: string
        description: >-
          The type of the Order. Always set to "MARKET" for Market Orders.
        enum:
        - MARKET
        - LIMIT
        - STOP
        - MARKET_IF_TOUCHED
        - TAKE_PROFIT
        - STOP_LOSS
        - TRAILING_STOP_LOSS
      instrument:
        type: string
        description: The Market Order's Instrument.
        format: >-
          A string containing the base currency and quote currency delimited
          by a "_".
      units:
        type: string
        description: >-
          The quantity requested to be filled by the Market Order. A posititive
          number of units results in a long Order, and a negative number
          of units results in a short Order.
        format: >-
          A decimal number encoded as a string. The amount of precision
          provided depends on what the number represents.
      timeInForce:
        type: string
        description: >-
          The time-in-force requested for the Market Order. Restricted to
          FOK or IOC for a MarketOrder.
        enum:
        - GTC
        - GTD
        - GFD
        - FOK
        - IOC
      priceBound:
        type: string
        description: >-
          The worst price that the client is willing to have the Market
          Order filled at.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      positionFill:
        type: string
        description: >-
          Specification of how Positions in the Account are modified when
          the Order is filled.
        enum:
        - OPEN_ONLY
        - REDUCE_FIRST
        - REDUCE_ONLY
        - DEFAULT
      tradeClose:
        $ref: transaction.yaml#/definitions/MarketOrderTradeClose
        description: >-
          Details of the Trade requested to be closed, only provided when
          the Market Order is being used to explicitly close a Trade.
      longPositionCloseout:
        $ref: transaction.yaml#/definitions/MarketOrderPositionCloseout
        description: >-
          Details of the long Position requested to be closed out, only
          provided when a Market Order is being used to explicitly closeout
          a long Position.
      shortPositionCloseout:
        $ref: transaction.yaml#/definitions/MarketOrderPositionCloseout
        description: >-
          Details of the short Position requested to be closed out, only
          provided when a Market Order is being used to explicitly closeout
          a short Position.
      marginCloseout:
        $ref: transaction.yaml#/definitions/MarketOrderMarginCloseout
        description: >-
          Details of the Margin Closeout that this Market Order was created
          for
      delayedTradeClose:
        $ref: transaction.yaml#/definitions/MarketOrderDelayedTradeClose
        description: >-
          Details of the delayed Trade close that this Market Order was
          created for
      takeProfitOnFill:
        $ref: transaction.yaml#/definitions/TakeProfitDetails
        description: >-
          TakeProfitDetails specifies the details of a Take Profit Order
          to be created on behalf of a client. This may happen when an Order
          is filled that opens a Trade requiring a Take Profit, or when
          a Trade's dependent Take Profit Order is modified directly through
          the Trade.
      stopLossOnFill:
        $ref: transaction.yaml#/definitions/StopLossDetails
        description: >-
          StopLossDetails specifies the details of a Stop Loss Order to
          be created on behalf of a client. This may happen when an Order
          is filled that opens a Trade requiring a Stop Loss, or when a
          Trade's dependent Stop Loss Order is modified directly through
          the Trade.
      trailingStopLossOnFill:
        $ref: transaction.yaml#/definitions/TrailingStopLossDetails
        description: >-
          TrailingStopLossDetails specifies the details of a Trailing Stop
          Loss Order to be created on behalf of a client. This may happen
          when an Order is filled that opens a Trade requiring a Trailing
          Stop Loss, or when a Trade's dependent Trailing Stop Loss Order
          is modified directly through the Trade.
      tradeClientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          Client Extensions to add to the Trade created when the Order is
          filled (if such a Trade is created). Do not set, modify, or delete
          tradeClientExtensions if your account is associated with MT4.
      fillingTransactionID:
        type: string
        description: >-
          ID of the Transaction that filled this Order (only provided when
          the Order's state is FILLED)
        example: '1523'
        format: >-
          String representation of the numerical OANDA-assigned TransactionID
      filledTime:
        type: string
        description: >-
          Date/time when the Order was filled (only provided when the Order's
          state is FILLED)
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      tradeOpenedID:
        type: string
        description: >-
          Trade ID of Trade opened when the Order was filled (only provided
          when the Order's state is FILLED and a Trade was opened as a result
          of the fill)
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      tradeReducedID:
        type: string
        description: >-
          Trade ID of Trade reduced when the Order was filled (only provided
          when the Order's state is FILLED and a Trade was reduced as a
          result of the fill)
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      tradeClosedIDs:
        type: array
        description: >-
          Trade IDs of Trades closed when the Order was filled (only provided
          when the Order's state is FILLED and one or more Trades were closed
          as a result of the fill)
        items:
          $ref: trade.yaml#/definitions/TradeID
      cancellingTransactionID:
        type: string
        description: >-
          ID of the Transaction that cancelled the Order (only provided
          when the Order's state is CANCELLED)
        example: '1523'
        format: >-
          String representation of the numerical OANDA-assigned TransactionID
      cancelledTime:
        type: string
        description: >-
          Date/time when the Order was cancelled (only provided when the
          state of the Order is CANCELLED)
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
  LimitOrder:
    type: object
    description: >-
      A LimitOrder is an order that is created with a price threshold, and
      will only be filled by a price that is equal to or better than the
      threshold.
    properties:
      id:
        type: string
        description: The Order's identifier, unique within the Order's Account.
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      createTime:
        type: string
        description: The time when the Order was created.
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      state:
        type: string
        description: The current state of the Order.
        enum:
        - PENDING
        - FILLED
        - TRIGGERED
        - CANCELLED
      clientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          The client extensions of the Order. Do not set, modify, or delete
          clientExtensions if your account is associated with MT4.
      type:
        type: string
        description: >-
          The type of the Order. Always set to "LIMIT" for Limit Orders.
        enum:
        - MARKET
        - LIMIT
        - STOP
        - MARKET_IF_TOUCHED
        - TAKE_PROFIT
        - STOP_LOSS
        - TRAILING_STOP_LOSS
      instrument:
        type: string
        description: The Limit Order's Instrument.
        format: >-
          A string containing the base currency and quote currency delimited
          by a "_".
      units:
        type: string
        description: >-
          The quantity requested to be filled by the Limit Order. A posititive
          number of units results in a long Order, and a negative number
          of units results in a short Order.
        format: >-
          A decimal number encoded as a string. The amount of precision
          provided depends on what the number represents.
      price:
        type: string
        description: >-
          The price threshold specified for the Limit Order. The Limit Order
          will only be filled by a market price that is equal to or better
          than this price.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      timeInForce:
        type: string
        description: The time-in-force requested for the Limit Order.
        enum:
        - GTC
        - GTD
        - GFD
        - FOK
        - IOC
      gtdTime:
        type: string
        description: >-
          The date/time when the Limit Order will be cancelled if its timeInForce
          is "GTD".
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      positionFill:
        type: string
        description: >-
          Specification of how Positions in the Account are modified when
          the Order is filled.
        enum:
        - OPEN_ONLY
        - REDUCE_FIRST
        - REDUCE_ONLY
        - DEFAULT
      takeProfitOnFill:
        $ref: transaction.yaml#/definitions/TakeProfitDetails
        description: >-
          TakeProfitDetails specifies the details of a Take Profit Order
          to be created on behalf of a client. This may happen when an Order
          is filled that opens a Trade requiring a Take Profit, or when
          a Trade's dependent Take Profit Order is modified directly through
          the Trade.
      stopLossOnFill:
        $ref: transaction.yaml#/definitions/StopLossDetails
        description: >-
          StopLossDetails specifies the details of a Stop Loss Order to
          be created on behalf of a client. This may happen when an Order
          is filled that opens a Trade requiring a Stop Loss, or when a
          Trade's dependent Stop Loss Order is modified directly through
          the Trade.
      trailingStopLossOnFill:
        $ref: transaction.yaml#/definitions/TrailingStopLossDetails
        description: >-
          TrailingStopLossDetails specifies the details of a Trailing Stop
          Loss Order to be created on behalf of a client. This may happen
          when an Order is filled that opens a Trade requiring a Trailing
          Stop Loss, or when a Trade's dependent Trailing Stop Loss Order
          is modified directly through the Trade.
      tradeClientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          Client Extensions to add to the Trade created when the Order is
          filled (if such a Trade is created). Do not set, modify, or delete
          tradeClientExtensions if your account is associated with MT4.
      fillingTransactionID:
        type: string
        description: >-
          ID of the Transaction that filled this Order (only provided when
          the Order's state is FILLED)
        example: '1523'
        format: >-
          String representation of the numerical OANDA-assigned TransactionID
      filledTime:
        type: string
        description: >-
          Date/time when the Order was filled (only provided when the Order's
          state is FILLED)
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      tradeOpenedID:
        type: string
        description: >-
          Trade ID of Trade opened when the Order was filled (only provided
          when the Order's state is FILLED and a Trade was opened as a result
          of the fill)
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      tradeReducedID:
        type: string
        description: >-
          Trade ID of Trade reduced when the Order was filled (only provided
          when the Order's state is FILLED and a Trade was reduced as a
          result of the fill)
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      tradeClosedIDs:
        type: array
        description: >-
          Trade IDs of Trades closed when the Order was filled (only provided
          when the Order's state is FILLED and one or more Trades were closed
          as a result of the fill)
        items:
          $ref: trade.yaml#/definitions/TradeID
      cancellingTransactionID:
        type: string
        description: >-
          ID of the Transaction that cancelled the Order (only provided
          when the Order's state is CANCELLED)
        example: '1523'
        format: >-
          String representation of the numerical OANDA-assigned TransactionID
      cancelledTime:
        type: string
        description: >-
          Date/time when the Order was cancelled (only provided when the
          state of the Order is CANCELLED)
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      replacesOrderID:
        type: string
        description: >-
          The ID of the Order that was replaced by this Order (only provided
          if this Order was created as part of a cancel/replace).
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      replacedByOrderID:
        type: string
        description: >-
          The ID of the Order that replaced this Order (only provided if
          this Order was cancelled as part of a cancel/replace).
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
  StopOrder:
    type: object
    description: >-
      A StopOrder is an order that is created with a price threshold, and
      will only be filled by a price that is equal to or worse than the
      threshold.
    properties:
      id:
        type: string
        description: The Order's identifier, unique within the Order's Account.
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      createTime:
        type: string
        description: The time when the Order was created.
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      state:
        type: string
        description: The current state of the Order.
        enum:
        - PENDING
        - FILLED
        - TRIGGERED
        - CANCELLED
      clientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          The client extensions of the Order. Do not set, modify, or delete
          clientExtensions if your account is associated with MT4.
      type:
        type: string
        description: The type of the Order. Always set to "STOP" for Stop
          Orders.
        enum:
        - MARKET
        - LIMIT
        - STOP
        - MARKET_IF_TOUCHED
        - TAKE_PROFIT
        - STOP_LOSS
        - TRAILING_STOP_LOSS
      instrument:
        type: string
        description: The Stop Order's Instrument.
        format: >-
          A string containing the base currency and quote currency delimited
          by a "_".
      units:
        type: string
        description: >-
          The quantity requested to be filled by the Stop Order. A posititive
          number of units results in a long Order, and a negative number
          of units results in a short Order.
        format: >-
          A decimal number encoded as a string. The amount of precision
          provided depends on what the number represents.
      price:
        type: string
        description: >-
          The price threshold specified for the Stop Order. The Stop Order
          will only be filled by a market price that is equal to or worse
          than this price.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      priceBound:
        type: string
        description: >-
          The worst market price that may be used to fill this Stop Order.
          If the market gaps and crosses through both the price and the
          priceBound, the Stop Order will be cancelled instead of being
          filled.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      timeInForce:
        type: string
        description: The time-in-force requested for the Stop Order.
        enum:
        - GTC
        - GTD
        - GFD
        - FOK
        - IOC
      gtdTime:
        type: string
        description: >-
          The date/time when the Stop Order will be cancelled if its timeInForce
          is "GTD".
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      positionFill:
        type: string
        description: >-
          Specification of how Positions in the Account are modified when
          the Order is filled.
        enum:
        - OPEN_ONLY
        - REDUCE_FIRST
        - REDUCE_ONLY
        - DEFAULT
      takeProfitOnFill:
        $ref: transaction.yaml#/definitions/TakeProfitDetails
        description: >-
          TakeProfitDetails specifies the details of a Take Profit Order
          to be created on behalf of a client. This may happen when an Order
          is filled that opens a Trade requiring a Take Profit, or when
          a Trade's dependent Take Profit Order is modified directly through
          the Trade.
      stopLossOnFill:
        $ref: transaction.yaml#/definitions/StopLossDetails
        description: >-
          StopLossDetails specifies the details of a Stop Loss Order to
          be created on behalf of a client. This may happen when an Order
          is filled that opens a Trade requiring a Stop Loss, or when a
          Trade's dependent Stop Loss Order is modified directly through
          the Trade.
      trailingStopLossOnFill:
        $ref: transaction.yaml#/definitions/TrailingStopLossDetails
        description: >-
          TrailingStopLossDetails specifies the details of a Trailing Stop
          Loss Order to be created on behalf of a client. This may happen
          when an Order is filled that opens a Trade requiring a Trailing
          Stop Loss, or when a Trade's dependent Trailing Stop Loss Order
          is modified directly through the Trade.
      tradeClientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          Client Extensions to add to the Trade created when the Order is
          filled (if such a Trade is created). Do not set, modify, or delete
          tradeClientExtensions if your account is associated with MT4.
      fillingTransactionID:
        type: string
        description: >-
          ID of the Transaction that filled this Order (only provided when
          the Order's state is FILLED)
        example: '1523'
        format: >-
          String representation of the numerical OANDA-assigned TransactionID
      filledTime:
        type: string
        description: >-
          Date/time when the Order was filled (only provided when the Order's
          state is FILLED)
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      tradeOpenedID:
        type: string
        description: >-
          Trade ID of Trade opened when the Order was filled (only provided
          when the Order's state is FILLED and a Trade was opened as a result
          of the fill)
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      tradeReducedID:
        type: string
        description: >-
          Trade ID of Trade reduced when the Order was filled (only provided
          when the Order's state is FILLED and a Trade was reduced as a
          result of the fill)
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      tradeClosedIDs:
        type: array
        description: >-
          Trade IDs of Trades closed when the Order was filled (only provided
          when the Order's state is FILLED and one or more Trades were closed
          as a result of the fill)
        items:
          $ref: trade.yaml#/definitions/TradeID
      cancellingTransactionID:
        type: string
        description: >-
          ID of the Transaction that cancelled the Order (only provided
          when the Order's state is CANCELLED)
        example: '1523'
        format: >-
          String representation of the numerical OANDA-assigned TransactionID
      cancelledTime:
        type: string
        description: >-
          Date/time when the Order was cancelled (only provided when the
          state of the Order is CANCELLED)
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      replacesOrderID:
        type: string
        description: >-
          The ID of the Order that was replaced by this Order (only provided
          if this Order was created as part of a cancel/replace).
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      replacedByOrderID:
        type: string
        description: >-
          The ID of the Order that replaced this Order (only provided if
          this Order was cancelled as part of a cancel/replace).
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
  MarketIfTouchedOrder:
    type: object
    description: >-
      A MarketIfTouchedOrder is an order that is created with a price threshold,
      and will only be filled by a market price that is touches or crosses
      the threshold.
    properties:
      id:
        type: string
        description: The Order's identifier, unique within the Order's Account.
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      createTime:
        type: string
        description: The time when the Order was created.
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      state:
        type: string
        description: The current state of the Order.
        enum:
        - PENDING
        - FILLED
        - TRIGGERED
        - CANCELLED
      clientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          The client extensions of the Order. Do not set, modify, or delete
          clientExtensions if your account is associated with MT4.
      type:
        type: string
        description: >-
          The type of the Order. Always set to "MARKET_IF_TOUCHED" for Market
          If Touched Orders.
        enum:
        - MARKET
        - LIMIT
        - STOP
        - MARKET_IF_TOUCHED
        - TAKE_PROFIT
        - STOP_LOSS
        - TRAILING_STOP_LOSS
      instrument:
        type: string
        description: The MarketIfTouched Order's Instrument.
        format: >-
          A string containing the base currency and quote currency delimited
          by a "_".
      units:
        type: string
        description: >-
          The quantity requested to be filled by the MarketIfTouched Order.
          A posititive number of units results in a long Order, and a negative
          number of units results in a short Order.
        format: >-
          A decimal number encoded as a string. The amount of precision
          provided depends on what the number represents.
      price:
        type: string
        description: >-
          The price threshold specified for the MarketIfTouched Order. The
          MarketIfTouched Order will only be filled by a market price that
          crosses this price from the direction of the market price at the
          time when the Order was created (the initialMarketPrice). Depending
          on the value of the Order's price and initialMarketPrice, the
          MarketIfTouchedOrder will behave like a Limit or a Stop Order.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      priceBound:
        type: string
        description: >-
          The worst market price that may be used to fill this MarketIfTouched
          Order.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      timeInForce:
        type: string
        description: >-
          The time-in-force requested for the MarketIfTouched Order. Restricted
          to "GTC", "GFD" and "GTD" for MarketIfTouched Orders.
        enum:
        - GTC
        - GTD
        - GFD
        - FOK
        - IOC
      gtdTime:
        type: string
        description: >-
          The date/time when the MarketIfTouched Order will be cancelled
          if its timeInForce is "GTD".
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      positionFill:
        type: string
        description: >-
          Specification of how Positions in the Account are modified when
          the Order is filled.
        enum:
        - OPEN_ONLY
        - REDUCE_FIRST
        - REDUCE_ONLY
        - DEFAULT
      initialMarketPrice:
        type: string
        description: >-
          The Market price at the time when the MarketIfTouched Order was
          created.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      takeProfitOnFill:
        $ref: transaction.yaml#/definitions/TakeProfitDetails
        description: >-
          TakeProfitDetails specifies the details of a Take Profit Order
          to be created on behalf of a client. This may happen when an Order
          is filled that opens a Trade requiring a Take Profit, or when
          a Trade's dependent Take Profit Order is modified directly through
          the Trade.
      stopLossOnFill:
        $ref: transaction.yaml#/definitions/StopLossDetails
        description: >-
          StopLossDetails specifies the details of a Stop Loss Order to
          be created on behalf of a client. This may happen when an Order
          is filled that opens a Trade requiring a Stop Loss, or when a
          Trade's dependent Stop Loss Order is modified directly through
          the Trade.
      trailingStopLossOnFill:
        $ref: transaction.yaml#/definitions/TrailingStopLossDetails
        description: >-
          TrailingStopLossDetails specifies the details of a Trailing Stop
          Loss Order to be created on behalf of a client. This may happen
          when an Order is filled that opens a Trade requiring a Trailing
          Stop Loss, or when a Trade's dependent Trailing Stop Loss Order
          is modified directly through the Trade.
      tradeClientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          Client Extensions to add to the Trade created when the Order is
          filled (if such a Trade is created). Do not set, modify, or delete
          tradeClientExtensions if your account is associated with MT4.
      fillingTransactionID:
        type: string
        description: >-
          ID of the Transaction that filled this Order (only provided when
          the Order's state is FILLED)
        example: '1523'
        format: >-
          String representation of the numerical OANDA-assigned TransactionID
      filledTime:
        type: string
        description: >-
          Date/time when the Order was filled (only provided when the Order's
          state is FILLED)
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      tradeOpenedID:
        type: string
        description: >-
          Trade ID of Trade opened when the Order was filled (only provided
          when the Order's state is FILLED and a Trade was opened as a result
          of the fill)
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      tradeReducedID:
        type: string
        description: >-
          Trade ID of Trade reduced when the Order was filled (only provided
          when the Order's state is FILLED and a Trade was reduced as a
          result of the fill)
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      tradeClosedIDs:
        type: array
        description: >-
          Trade IDs of Trades closed when the Order was filled (only provided
          when the Order's state is FILLED and one or more Trades were closed
          as a result of the fill)
        items:
          $ref: trade.yaml#/definitions/TradeID
      cancellingTransactionID:
        type: string
        description: >-
          ID of the Transaction that cancelled the Order (only provided
          when the Order's state is CANCELLED)
        example: '1523'
        format: >-
          String representation of the numerical OANDA-assigned TransactionID
      cancelledTime:
        type: string
        description: >-
          Date/time when the Order was cancelled (only provided when the
          state of the Order is CANCELLED)
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      replacesOrderID:
        type: string
        description: >-
          The ID of the Order that was replaced by this Order (only provided
          if this Order was created as part of a cancel/replace).
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      replacedByOrderID:
        type: string
        description: >-
          The ID of the Order that replaced this Order (only provided if
          this Order was cancelled as part of a cancel/replace).
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
  TakeProfitOrder:
    type: object
    description: >-
      A TakeProfitOrder is an order that is linked to an open Trade and
      created with a price threshold. The Order will be filled (closing
      the Trade) by the first price that is equal to or better than the
      threshold. A TakeProfitOrder cannot be used to open a new Position.
    properties:
      id:
        type: string
        description: The Order's identifier, unique within the Order's Account.
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      createTime:
        type: string
        description: The time when the Order was created.
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      state:
        type: string
        description: The current state of the Order.
        enum:
        - PENDING
        - FILLED
        - TRIGGERED
        - CANCELLED
      clientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          The client extensions of the Order. Do not set, modify, or delete
          clientExtensions if your account is associated with MT4.
      type:
        type: string
        description: >-
          The type of the Order. Always set to "TAKE_PROFIT" for Take Profit
          Orders.
        enum:
        - MARKET
        - LIMIT
        - STOP
        - MARKET_IF_TOUCHED
        - TAKE_PROFIT
        - STOP_LOSS
        - TRAILING_STOP_LOSS
      tradeID:
        type: string
        description: >-
          The ID of the Trade to close when the price threshold is breached.
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      clientTradeID:
        type: string
        description: >-
          The client ID of the Trade to be closed when the price threshold
          is breached.
        example: my_order_id
      price:
        type: string
        description: >-
          The price threshold specified for the TakeProfit Order. The associated
          Trade will be closed by a market price that is equal to or better
          than this threshold.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      timeInForce:
        type: string
        description: >-
          The time-in-force requested for the TakeProfit Order. Restricted
          to "GTC", "GFD" and "GTD" for TakeProfit Orders.
        enum:
        - GTC
        - GTD
        - GFD
        - FOK
        - IOC
      gtdTime:
        type: string
        description: >-
          The date/time when the TakeProfit Order will be cancelled if its
          timeInForce is "GTD".
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      fillingTransactionID:
        type: string
        description: >-
          ID of the Transaction that filled this Order (only provided when
          the Order's state is FILLED)
        example: '1523'
        format: >-
          String representation of the numerical OANDA-assigned TransactionID
      filledTime:
        type: string
        description: >-
          Date/time when the Order was filled (only provided when the Order's
          state is FILLED)
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      tradeOpenedID:
        type: string
        description: >-
          Trade ID of Trade opened when the Order was filled (only provided
          when the Order's state is FILLED and a Trade was opened as a result
          of the fill)
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      tradeReducedID:
        type: string
        description: >-
          Trade ID of Trade reduced when the Order was filled (only provided
          when the Order's state is FILLED and a Trade was reduced as a
          result of the fill)
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      tradeClosedIDs:
        type: array
        description: >-
          Trade IDs of Trades closed when the Order was filled (only provided
          when the Order's state is FILLED and one or more Trades were closed
          as a result of the fill)
        items:
          $ref: trade.yaml#/definitions/TradeID
      cancellingTransactionID:
        type: string
        description: >-
          ID of the Transaction that cancelled the Order (only provided
          when the Order's state is CANCELLED)
        example: '1523'
        format: >-
          String representation of the numerical OANDA-assigned TransactionID
      cancelledTime:
        type: string
        description: >-
          Date/time when the Order was cancelled (only provided when the
          state of the Order is CANCELLED)
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      replacesOrderID:
        type: string
        description: >-
          The ID of the Order that was replaced by this Order (only provided
          if this Order was created as part of a cancel/replace).
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      replacedByOrderID:
        type: string
        description: >-
          The ID of the Order that replaced this Order (only provided if
          this Order was cancelled as part of a cancel/replace).
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
  StopLossOrder:
    type: object
    description: >-
      A StopLossOrder is an order that is linked to an open Trade and created
      with a price threshold. The Order will be filled (closing the Trade)
      by the first price that is equal to or worse than the threshold. A
      StopLossOrder cannot be used to open a new Position.
    properties:
      id:
        type: string
        description: The Order's identifier, unique within the Order's Account.
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      createTime:
        type: string
        description: The time when the Order was created.
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      state:
        type: string
        description: The current state of the Order.
        enum:
        - PENDING
        - FILLED
        - TRIGGERED
        - CANCELLED
      clientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          The client extensions of the Order. Do not set, modify, or delete
          clientExtensions if your account is associated with MT4.
      type:
        type: string
        description: >-
          The type of the Order. Always set to "STOP_LOSS" for Stop Loss
          Orders.
        enum:
        - MARKET
        - LIMIT
        - STOP
        - MARKET_IF_TOUCHED
        - TAKE_PROFIT
        - STOP_LOSS
        - TRAILING_STOP_LOSS
      tradeID:
        type: string
        description: >-
          The ID of the Trade to close when the price threshold is breached.
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      clientTradeID:
        type: string
        description: >-
          The client ID of the Trade to be closed when the price threshold
          is breached.
        example: my_order_id
      price:
        type: string
        description: >-
          The price threshold specified for the StopLoss Order. The associated
          Trade will be closed by a market price that is equal to or worse
          than this threshold.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      timeInForce:
        type: string
        description: >-
          The time-in-force requested for the StopLoss Order. Restricted
          to "GTC", "GFD" and "GTD" for StopLoss Orders.
        enum:
        - GTC
        - GTD
        - GFD
        - FOK
        - IOC
      gtdTime:
        type: string
        description: >-
          The date/time when the StopLoss Order will be cancelled if its
          timeInForce is "GTD".
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      fillingTransactionID:
        type: string
        description: >-
          ID of the Transaction that filled this Order (only provided when
          the Order's state is FILLED)
        example: '1523'
        format: >-
          String representation of the numerical OANDA-assigned TransactionID
      filledTime:
        type: string
        description: >-
          Date/time when the Order was filled (only provided when the Order's
          state is FILLED)
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      tradeOpenedID:
        type: string
        description: >-
          Trade ID of Trade opened when the Order was filled (only provided
          when the Order's state is FILLED and a Trade was opened as a result
          of the fill)
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      tradeReducedID:
        type: string
        description: >-
          Trade ID of Trade reduced when the Order was filled (only provided
          when the Order's state is FILLED and a Trade was reduced as a
          result of the fill)
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      tradeClosedIDs:
        type: array
        description: >-
          Trade IDs of Trades closed when the Order was filled (only provided
          when the Order's state is FILLED and one or more Trades were closed
          as a result of the fill)
        items:
          $ref: trade.yaml#/definitions/TradeID
      cancellingTransactionID:
        type: string
        description: >-
          ID of the Transaction that cancelled the Order (only provided
          when the Order's state is CANCELLED)
        example: '1523'
        format: >-
          String representation of the numerical OANDA-assigned TransactionID
      cancelledTime:
        type: string
        description: >-
          Date/time when the Order was cancelled (only provided when the
          state of the Order is CANCELLED)
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      replacesOrderID:
        type: string
        description: >-
          The ID of the Order that was replaced by this Order (only provided
          if this Order was created as part of a cancel/replace).
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      replacedByOrderID:
        type: string
        description: >-
          The ID of the Order that replaced this Order (only provided if
          this Order was cancelled as part of a cancel/replace).
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
  TrailingStopLossOrder:
    type: object
    description: >-
      A TrailingStopLossOrder is an order that is linked to an open Trade
      and created with a price distance. The price distance is used to calculate
      a trailing stop value for the order that is in the losing direction
      from the market price at the time of the order's creation. The trailing
      stop value will follow the market price as it moves in the winning
      direction, and the order will filled (closing the Trade) by the first
      price that is equal to or worse than the trailing stop value. A TrailingStopLossOrder
      cannot be used to open a new Position.
    properties:
      id:
        type: string
        description: The Order's identifier, unique within the Order's Account.
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      createTime:
        type: string
        description: The time when the Order was created.
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      state:
        type: string
        description: The current state of the Order.
        enum:
        - PENDING
        - FILLED
        - TRIGGERED
        - CANCELLED
      clientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          The client extensions of the Order. Do not set, modify, or delete
          clientExtensions if your account is associated with MT4.
      type:
        type: string
        description: >-
          The type of the Order. Always set to "TRAILING_STOP_LOSS" for
          Trailing Stop Loss Orders.
        enum:
        - MARKET
        - LIMIT
        - STOP
        - MARKET_IF_TOUCHED
        - TAKE_PROFIT
        - STOP_LOSS
        - TRAILING_STOP_LOSS
      tradeID:
        type: string
        description: >-
          The ID of the Trade to close when the price threshold is breached.
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      clientTradeID:
        type: string
        description: >-
          The client ID of the Trade to be closed when the price threshold
          is breached.
        example: my_order_id
      distance:
        type: string
        description: The price distance specified for the TrailingStopLoss
          Order.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      timeInForce:
        type: string
        description: >-
          The time-in-force requested for the TrailingStopLoss Order. Restricted
          to "GTC", "GFD" and "GTD" for TrailingStopLoss Orders.
        enum:
        - GTC
        - GTD
        - GFD
        - FOK
        - IOC
      gtdTime:
        type: string
        description: >-
          The date/time when the StopLoss Order will be cancelled if its
          timeInForce is "GTD".
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      trailingStopValue:
        type: string
        description: >-
          The trigger price for the Trailing Stop Loss Order. The trailing
          stop value will trail (follow) the market price by the TSL order's
          configured "distance" as the market price moves in the winning
          direction. If the market price moves to a level that is equal
          to or worse than the trailing stop value, the order will be filled
          and the Trade will be closed.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      fillingTransactionID:
        type: string
        description: >-
          ID of the Transaction that filled this Order (only provided when
          the Order's state is FILLED)
        example: '1523'
        format: >-
          String representation of the numerical OANDA-assigned TransactionID
      filledTime:
        type: string
        description: >-
          Date/time when the Order was filled (only provided when the Order's
          state is FILLED)
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      tradeOpenedID:
        type: string
        description: >-
          Trade ID of Trade opened when the Order was filled (only provided
          when the Order's state is FILLED and a Trade was opened as a result
          of the fill)
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      tradeReducedID:
        type: string
        description: >-
          Trade ID of Trade reduced when the Order was filled (only provided
          when the Order's state is FILLED and a Trade was reduced as a
          result of the fill)
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      tradeClosedIDs:
        type: array
        description: >-
          Trade IDs of Trades closed when the Order was filled (only provided
          when the Order's state is FILLED and one or more Trades were closed
          as a result of the fill)
        items:
          $ref: trade.yaml#/definitions/TradeID
      cancellingTransactionID:
        type: string
        description: >-
          ID of the Transaction that cancelled the Order (only provided
          when the Order's state is CANCELLED)
        example: '1523'
        format: >-
          String representation of the numerical OANDA-assigned TransactionID
      cancelledTime:
        type: string
        description: >-
          Date/time when the Order was cancelled (only provided when the
          state of the Order is CANCELLED)
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      replacesOrderID:
        type: string
        description: >-
          The ID of the Order that was replaced by this Order (only provided
          if this Order was created as part of a cancel/replace).
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
      replacedByOrderID:
        type: string
        description: >-
          The ID of the Order that replaced this Order (only provided if
          this Order was cancelled as part of a cancel/replace).
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned OrderID. OANDA-assigned
          OrderIDs are positive integers, and are derived from the TransactionID
          of the Transaction that created the Order.
  OrderRequest:
    type: object
    description: >-
      The base Order specification used when requesting that an Order be
      created. Each specific Order-type extends this definition.
    properties: {}
  MarketOrderRequest:
    type: object
    description: >-
      A MarketOrderRequest specifies the parameters that may be set when
      creating a Market Order.
    properties:
      type:
        type: string
        description: >-
          The type of the Order to Create. Must be set to "MARKET" when
          creating a Market Order.
        enum:
        - MARKET
        - LIMIT
        - STOP
        - MARKET_IF_TOUCHED
        - TAKE_PROFIT
        - STOP_LOSS
        - TRAILING_STOP_LOSS
      instrument:
        type: string
        description: The Market Order's Instrument.
        format: >-
          A string containing the base currency and quote currency delimited
          by a "_".
      units:
        type: string
        description: >-
          The quantity requested to be filled by the Market Order. A posititive
          number of units results in a long Order, and a negative number
          of units results in a short Order.
        format: >-
          A decimal number encoded as a string. The amount of precision
          provided depends on what the number represents.
      timeInForce:
        type: string
        description: >-
          The time-in-force requested for the Market Order. Restricted to
          FOK or IOC for a MarketOrder.
        enum:
        - GTC
        - GTD
        - GFD
        - FOK
        - IOC
      priceBound:
        type: string
        description: >-
          The worst price that the client is willing to have the Market
          Order filled at.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      positionFill:
        type: string
        description: >-
          Specification of how Positions in the Account are modified when
          the Order is filled.
        enum:
        - OPEN_ONLY
        - REDUCE_FIRST
        - REDUCE_ONLY
        - DEFAULT
      clientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          The client extensions to add to the Order. Do not set, modify,
          or delete clientExtensions if your account is associated with
          MT4.
      takeProfitOnFill:
        $ref: transaction.yaml#/definitions/TakeProfitDetails
        description: >-
          TakeProfitDetails specifies the details of a Take Profit Order
          to be created on behalf of a client. This may happen when an Order
          is filled that opens a Trade requiring a Take Profit, or when
          a Trade's dependent Take Profit Order is modified directly through
          the Trade.
      stopLossOnFill:
        $ref: transaction.yaml#/definitions/StopLossDetails
        description: >-
          StopLossDetails specifies the details of a Stop Loss Order to
          be created on behalf of a client. This may happen when an Order
          is filled that opens a Trade requiring a Stop Loss, or when a
          Trade's dependent Stop Loss Order is modified directly through
          the Trade.
      trailingStopLossOnFill:
        $ref: transaction.yaml#/definitions/TrailingStopLossDetails
        description: >-
          TrailingStopLossDetails specifies the details of a Trailing Stop
          Loss Order to be created on behalf of a client. This may happen
          when an Order is filled that opens a Trade requiring a Trailing
          Stop Loss, or when a Trade's dependent Trailing Stop Loss Order
          is modified directly through the Trade.
      tradeClientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          Client Extensions to add to the Trade created when the Order is
          filled (if such a Trade is created). Do not set, modify, or delete
          tradeClientExtensions if your account is associated with MT4.
  LimitOrderRequest:
    type: object
    description: >-
      A LimitOrderRequest specifies the parameters that may be set when
      creating a Limit Order.
    properties:
      type:
        type: string
        description: >-
          The type of the Order to Create. Must be set to "LIMIT" when creating
          a Market Order.
        enum:
        - MARKET
        - LIMIT
        - STOP
        - MARKET_IF_TOUCHED
        - TAKE_PROFIT
        - STOP_LOSS
        - TRAILING_STOP_LOSS
      instrument:
        type: string
        description: The Limit Order's Instrument.
        format: >-
          A string containing the base currency and quote currency delimited
          by a "_".
      units:
        type: string
        description: >-
          The quantity requested to be filled by the Limit Order. A posititive
          number of units results in a long Order, and a negative number
          of units results in a short Order.
        format: >-
          A decimal number encoded as a string. The amount of precision
          provided depends on what the number represents.
      price:
        type: string
        description: >-
          The price threshold specified for the Limit Order. The Limit Order
          will only be filled by a market price that is equal to or better
          than this price.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      timeInForce:
        type: string
        description: The time-in-force requested for the Limit Order.
        enum:
        - GTC
        - GTD
        - GFD
        - FOK
        - IOC
      gtdTime:
        type: string
        description: >-
          The date/time when the Limit Order will be cancelled if its timeInForce
          is "GTD".
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      positionFill:
        type: string
        description: >-
          Specification of how Positions in the Account are modified when
          the Order is filled.
        enum:
        - OPEN_ONLY
        - REDUCE_FIRST
        - REDUCE_ONLY
        - DEFAULT
      clientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          The client extensions to add to the Order. Do not set, modify,
          or delete clientExtensions if your account is associated with
          MT4.
      takeProfitOnFill:
        $ref: transaction.yaml#/definitions/TakeProfitDetails
        description: >-
          TakeProfitDetails specifies the details of a Take Profit Order
          to be created on behalf of a client. This may happen when an Order
          is filled that opens a Trade requiring a Take Profit, or when
          a Trade's dependent Take Profit Order is modified directly through
          the Trade.
      stopLossOnFill:
        $ref: transaction.yaml#/definitions/StopLossDetails
        description: >-
          StopLossDetails specifies the details of a Stop Loss Order to
          be created on behalf of a client. This may happen when an Order
          is filled that opens a Trade requiring a Stop Loss, or when a
          Trade's dependent Stop Loss Order is modified directly through
          the Trade.
      trailingStopLossOnFill:
        $ref: transaction.yaml#/definitions/TrailingStopLossDetails
        description: >-
          TrailingStopLossDetails specifies the details of a Trailing Stop
          Loss Order to be created on behalf of a client. This may happen
          when an Order is filled that opens a Trade requiring a Trailing
          Stop Loss, or when a Trade's dependent Trailing Stop Loss Order
          is modified directly through the Trade.
      tradeClientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          Client Extensions to add to the Trade created when the Order is
          filled (if such a Trade is created). Do not set, modify, or delete
          tradeClientExtensions if your account is associated with MT4.
  StopOrderRequest:
    type: object
    description: >-
      A StopOrderRequest specifies the parameters that may be set when creating
      a Stop Order.
    properties:
      type:
        type: string
        description: >-
          The type of the Order to Create. Must be set to "STOP" when creating
          a Stop Order.
        enum:
        - MARKET
        - LIMIT
        - STOP
        - MARKET_IF_TOUCHED
        - TAKE_PROFIT
        - STOP_LOSS
        - TRAILING_STOP_LOSS
      instrument:
        type: string
        description: The Stop Order's Instrument.
        format: >-
          A string containing the base currency and quote currency delimited
          by a "_".
      units:
        type: string
        description: >-
          The quantity requested to be filled by the Stop Order. A posititive
          number of units results in a long Order, and a negative number
          of units results in a short Order.
        format: >-
          A decimal number encoded as a string. The amount of precision
          provided depends on what the number represents.
      price:
        type: string
        description: >-
          The price threshold specified for the Stop Order. The Stop Order
          will only be filled by a market price that is equal to or worse
          than this price.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      priceBound:
        type: string
        description: >-
          The worst market price that may be used to fill this Stop Order.
          If the market gaps and crosses through both the price and the
          priceBound, the Stop Order will be cancelled instead of being
          filled.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      timeInForce:
        type: string
        description: The time-in-force requested for the Stop Order.
        enum:
        - GTC
        - GTD
        - GFD
        - FOK
        - IOC
      gtdTime:
        type: string
        description: >-
          The date/time when the Stop Order will be cancelled if its timeInForce
          is "GTD".
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      positionFill:
        type: string
        description: >-
          Specification of how Positions in the Account are modified when
          the Order is filled.
        enum:
        - OPEN_ONLY
        - REDUCE_FIRST
        - REDUCE_ONLY
        - DEFAULT
      clientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          The client extensions to add to the Order. Do not set, modify,
          or delete clientExtensions if your account is associated with
          MT4.
      takeProfitOnFill:
        $ref: transaction.yaml#/definitions/TakeProfitDetails
        description: >-
          TakeProfitDetails specifies the details of a Take Profit Order
          to be created on behalf of a client. This may happen when an Order
          is filled that opens a Trade requiring a Take Profit, or when
          a Trade's dependent Take Profit Order is modified directly through
          the Trade.
      stopLossOnFill:
        $ref: transaction.yaml#/definitions/StopLossDetails
        description: >-
          StopLossDetails specifies the details of a Stop Loss Order to
          be created on behalf of a client. This may happen when an Order
          is filled that opens a Trade requiring a Stop Loss, or when a
          Trade's dependent Stop Loss Order is modified directly through
          the Trade.
      trailingStopLossOnFill:
        $ref: transaction.yaml#/definitions/TrailingStopLossDetails
        description: >-
          TrailingStopLossDetails specifies the details of a Trailing Stop
          Loss Order to be created on behalf of a client. This may happen
          when an Order is filled that opens a Trade requiring a Trailing
          Stop Loss, or when a Trade's dependent Trailing Stop Loss Order
          is modified directly through the Trade.
      tradeClientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          Client Extensions to add to the Trade created when the Order is
          filled (if such a Trade is created). Do not set, modify, or delete
          tradeClientExtensions if your account is associated with MT4.
  MarketIfTouchedOrderRequest:
    type: object
    description: >-
      A MarketIfTouchedOrderRequest specifies the parameters that may be
      set when creating a Market-if-Touched Order.
    properties:
      type:
        type: string
        description: >-
          The type of the Order to Create. Must be set to "MARKET_IF_TOUCHED"
          when creating a Market If Touched Order.
        enum:
        - MARKET
        - LIMIT
        - STOP
        - MARKET_IF_TOUCHED
        - TAKE_PROFIT
        - STOP_LOSS
        - TRAILING_STOP_LOSS
      instrument:
        type: string
        description: The MarketIfTouched Order's Instrument.
        format: >-
          A string containing the base currency and quote currency delimited
          by a "_".
      units:
        type: string
        description: >-
          The quantity requested to be filled by the MarketIfTouched Order.
          A posititive number of units results in a long Order, and a negative
          number of units results in a short Order.
        format: >-
          A decimal number encoded as a string. The amount of precision
          provided depends on what the number represents.
      price:
        type: string
        description: >-
          The price threshold specified for the MarketIfTouched Order. The
          MarketIfTouched Order will only be filled by a market price that
          crosses this price from the direction of the market price at the
          time when the Order was created (the initialMarketPrice). Depending
          on the value of the Order's price and initialMarketPrice, the
          MarketIfTouchedOrder will behave like a Limit or a Stop Order.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      priceBound:
        type: string
        description: >-
          The worst market price that may be used to fill this MarketIfTouched
          Order.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      timeInForce:
        type: string
        description: >-
          The time-in-force requested for the MarketIfTouched Order. Restricted
          to "GTC", "GFD" and "GTD" for MarketIfTouched Orders.
        enum:
        - GTC
        - GTD
        - GFD
        - FOK
        - IOC
      gtdTime:
        type: string
        description: >-
          The date/time when the MarketIfTouched Order will be cancelled
          if its timeInForce is "GTD".
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      positionFill:
        type: string
        description: >-
          Specification of how Positions in the Account are modified when
          the Order is filled.
        enum:
        - OPEN_ONLY
        - REDUCE_FIRST
        - REDUCE_ONLY
        - DEFAULT
      clientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          The client extensions to add to the Order. Do not set, modify,
          or delete clientExtensions if your account is associated with
          MT4.
      takeProfitOnFill:
        $ref: transaction.yaml#/definitions/TakeProfitDetails
        description: >-
          TakeProfitDetails specifies the details of a Take Profit Order
          to be created on behalf of a client. This may happen when an Order
          is filled that opens a Trade requiring a Take Profit, or when
          a Trade's dependent Take Profit Order is modified directly through
          the Trade.
      stopLossOnFill:
        $ref: transaction.yaml#/definitions/StopLossDetails
        description: >-
          StopLossDetails specifies the details of a Stop Loss Order to
          be created on behalf of a client. This may happen when an Order
          is filled that opens a Trade requiring a Stop Loss, or when a
          Trade's dependent Stop Loss Order is modified directly through
          the Trade.
      trailingStopLossOnFill:
        $ref: transaction.yaml#/definitions/TrailingStopLossDetails
        description: >-
          TrailingStopLossDetails specifies the details of a Trailing Stop
          Loss Order to be created on behalf of a client. This may happen
          when an Order is filled that opens a Trade requiring a Trailing
          Stop Loss, or when a Trade's dependent Trailing Stop Loss Order
          is modified directly through the Trade.
      tradeClientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          Client Extensions to add to the Trade created when the Order is
          filled (if such a Trade is created). Do not set, modify, or delete
          tradeClientExtensions if your account is associated with MT4.
  TakeProfitOrderRequest:
    type: object
    description: >-
      A TakeProfitOrderRequest specifies the parameters that may be set
      when creating a Take Profit Order.
    properties:
      type:
        type: string
        description: >-
          The type of the Order to Create. Must be set to "TAKE_PROFIT"
          when creating a Take Profit Order.
        enum:
        - MARKET
        - LIMIT
        - STOP
        - MARKET_IF_TOUCHED
        - TAKE_PROFIT
        - STOP_LOSS
        - TRAILING_STOP_LOSS
      tradeID:
        type: string
        description: >-
          The ID of the Trade to close when the price threshold is breached.
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      clientTradeID:
        type: string
        description: >-
          The client ID of the Trade to be closed when the price threshold
          is breached.
        example: my_order_id
      price:
        type: string
        description: >-
          The price threshold specified for the TakeProfit Order. The associated
          Trade will be closed by a market price that is equal to or better
          than this threshold.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      timeInForce:
        type: string
        description: >-
          The time-in-force requested for the TakeProfit Order. Restricted
          to "GTC", "GFD" and "GTD" for TakeProfit Orders.
        enum:
        - GTC
        - GTD
        - GFD
        - FOK
        - IOC
      gtdTime:
        type: string
        description: >-
          The date/time when the TakeProfit Order will be cancelled if its
          timeInForce is "GTD".
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      clientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          The client extensions to add to the Order. Do not set, modify,
          or delete clientExtensions if your account is associated with
          MT4.
  StopLossOrderRequest:
    type: object
    description: >-
      A StopLossOrderRequest specifies the parameters that may be set when
      creating a Stop Loss Order.
    properties:
      type:
        type: string
        description: >-
          The type of the Order to Create. Must be set to "STOP_LOSS" when
          creating a Stop Loss Order.
        enum:
        - MARKET
        - LIMIT
        - STOP
        - MARKET_IF_TOUCHED
        - TAKE_PROFIT
        - STOP_LOSS
        - TRAILING_STOP_LOSS
      tradeID:
        type: string
        description: >-
          The ID of the Trade to close when the price threshold is breached.
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      clientTradeID:
        type: string
        description: >-
          The client ID of the Trade to be closed when the price threshold
          is breached.
        example: my_order_id
      price:
        type: string
        description: >-
          The price threshold specified for the StopLoss Order. The associated
          Trade will be closed by a market price that is equal to or worse
          than this threshold.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      timeInForce:
        type: string
        description: >-
          The time-in-force requested for the StopLoss Order. Restricted
          to "GTC", "GFD" and "GTD" for StopLoss Orders.
        enum:
        - GTC
        - GTD
        - GFD
        - FOK
        - IOC
      gtdTime:
        type: string
        description: >-
          The date/time when the StopLoss Order will be cancelled if its
          timeInForce is "GTD".
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      clientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          The client extensions to add to the Order. Do not set, modify,
          or delete clientExtensions if your account is associated with
          MT4.
  TrailingStopLossOrderRequest:
    type: object
    description: >-
      A TrailingStopLossOrderRequest specifies the parameters that may be
      set when creating a Trailing Stop Loss Order.
    properties:
      type:
        type: string
        description: >-
          The type of the Order to Create. Must be set to "TRAILING_STOP_LOSS"
          when creating a Trailng Stop Loss Order.
        enum:
        - MARKET
        - LIMIT
        - STOP
        - MARKET_IF_TOUCHED
        - TAKE_PROFIT
        - STOP_LOSS
        - TRAILING_STOP_LOSS
      tradeID:
        type: string
        description: >-
          The ID of the Trade to close when the price threshold is breached.
        example: '1523'
        format: >-
          The string representation of the OANDA-assigned TradeID. OANDA-assigned
          TradeIDs are positive integers, and are derived from the TransactionID
          of the Transaction that opened the Trade.
      clientTradeID:
        type: string
        description: >-
          The client ID of the Trade to be closed when the price threshold
          is breached.
        example: my_order_id
      distance:
        type: string
        description: The price distance specified for the TrailingStopLoss
          Order.
        format: >-
          A decimal number encodes as a string. The amount of precision
          provided depends on the Price's Instrument.
      timeInForce:
        type: string
        description: >-
          The time-in-force requested for the TrailingStopLoss Order. Restricted
          to "GTC", "GFD" and "GTD" for TrailingStopLoss Orders.
        enum:
        - GTC
        - GTD
        - GFD
        - FOK
        - IOC
      gtdTime:
        type: string
        description: >-
          The date/time when the StopLoss Order will be cancelled if its
          timeInForce is "GTD".
        format: >-
          A string conforming to RFC 3339 (https://tools.ietf.org/rfc/rfc3339.txt).
          The amount of sub-second precision provided may represent milliseconds
          (000 to 999), microseconds (000000 to 999999) or nanoseconds (000000000
          to 999999999).
      clientExtensions:
        $ref: transaction.yaml#/definitions/ClientExtensions
        description: >-
          The client extensions to add to the Order. Do not set, modify,
          or delete clientExtensions if your account is associated with
          MT4.
parameters:
  orderSpecifierPathParam:
    name: orderSpecifier
    despcription: The Order Specifier
    in: path
    type: string
    format: >-
      Either the Order's OANDA-assigned OrderID or the Order's client-provided
      ClientID prefixed by the "@" symbol
    required: true

